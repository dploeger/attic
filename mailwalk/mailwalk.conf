sub init
{

# Configuration file for mailwalk

# Change these variables

##
# Misc

# Should Mailwalk be verbose? (use 0 (false) or values from 1 (less verbose) 6 (most verbose))
our $verbose=0;

##
# Paths

# Path, where mailwalk should start searching for Maildirs
our $path_base="/home";

# Name of a maildir (usually "Maildir")
our $path_maildir="Maildir";

# Regexp of a valid maildir
# This can be used to exclude some maildirs from the walking-process
# usually this is "^.*$", which means "anything" ;-)
our $regexp_maildir="^.*\$";


##
# Action Modules
# Mailwalk is built up on a modular base, so it's extendible.

# Path to the modules
our $path_modules="./modules";

# The module Hash
# The key is the name of the action used in %actions,
# the value is the path to the perl-file handling this action.
# This perl-file is executed with a minimum of 2 parameters:
# <perl-interpreter> <mod-file> <maildir> <file to handle> [<parameters>]
# The parameters are transferred using:
# "<parametername>=<parametervalue>,<parametername#2>=<parametervalue#2>" and so on

our %modules=(

  # Module "delete"
 delete => $path_modules."/delete.pl"
  # Deletes a mail (nothing more ;-) )
  
  # Module "move"
,move => $path_modules."/move.pl"
  # Moves a mail. Has one parameter:
  # move_to -> Move the mail to this Folder (From within the maildir)

  # Module "copy"
,copy => $path_modules."/copy.pl"
  # Copies a mail. Has one parameter:
  # copy_to -> Copy the mail to this Folder (From within the maildir)

  # Module "spam-learn"
,spamlearn => $path_modules."/spam-learn.pl"
  # Let's the spam-detector learn, that the mail is spam.

  # Module "ham-learn"
,hamlearn => $path_modules."/ham-learn.pl"
  # Let's the ham-detector learn, that the mail is ham. (that is "not spam")

);


##
# Actions

# Actions define, what to do with messages in a folder.
# (This is presumably the main thing you WANNA CHANGE!)

# The actions are defined in the %action-hash, one index after another
# Every index awaits the following parameters: []-> optional
# dir_regexp -> A regexp, that identifies a directory. ("/\.Trash/" for example)
# file_age -> Only apply actions on files that are more than file_age (in seconds) old (0->every file)
# dir_actions -> A hash containing all actions that need to take place in this directory
#                This hash itself awaits the following parameters: []-> optional
#                action -> The name of the action (see in the modules above)
#                parameters -> A hash containing parameters for the action (again, see the modules)

# Let's do an example:
# %actions = (
#   # First Action: Empty trash
#  0 => { dir_regexp  => "/\.Trash/",			# The Trash-Dir
#         file_age    => "0",				# Every file
#         dir_actions => { 0 => {action => "delete"}}	# First (and only) action: 
#							# Delete the file (Delete takes no parameters)
#                         
#   # Second Action: Learn Spams
#, 1 => { dir_regexp  => "/\.Spam-Learn/",		# A folder name ".Spam-Learn"
#         file_age    => "0",				# Every file
#         dir_actions => { 0 =>				# Firsts action: Learn Spam
#			  { action => "spam-learn" }	# (has no parameters)
#			  1 =>				# Second action
#			  { action => "move" ,		# Move to Spam-Folder
#			    parameters => { move_to => ".Spam" }
#			  }				# Move the files
#			}				
#     }
#   # and so on...
#
# );

%actions=(						
  
  # First Action: Empty trash
  0 => { dir_regexp  => "\.Trash\/cur",			
         file_age    => 0,			
        dir_actions => { 0 => {action => "delete"}}
       }	 
                         
  # Second Action: Learn Spams and delete them
, 1 => { dir_regexp => "\.Spam-Learn\/cur",
         file_age    => 0,		
         dir_actions => { 0 =>				
			  { action => "spamlearn" },
			  1 =>				
			  { action => "delete" }
			}
       }	

  # Third Action: Learn Hams and delete them (we expect the user to copy them into Ham-Learn!)
, 2 => { dir_regexp => "\.Ham-Learn\/cur",		
         file_age    => 0,		
         dir_actions => { 0 =>				
			  { action => "hamlearn" },
			  1 =>				
			  { action => "delete" }
			}
       }	

  # Fourth Action: Empty spam folder, Messages older than one day
, 3 => { dir_regexp => "\.Spam\/cur",
   	 file_age    => 86400,
 	 dir_actions => { 0 => { action => "delete" } }
       }
);


##
# Finetuning
# These values are for finetuning mailwalk, change at your own risk.

$stat_field=9;			# Use access time for time calculation

}

1;
